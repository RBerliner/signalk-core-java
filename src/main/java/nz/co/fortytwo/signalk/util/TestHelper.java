package nz.co.fortytwo.signalk.util;

import static nz.co.fortytwo.signalk.util.SignalKConstants.dot;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_airPressure;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_airPressureChangeRateAlarm;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_waterTemp;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_angleApparent;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_directionChangeAlarm;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_directionTrue;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_speedAlarm;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_speedApparent;
import static nz.co.fortytwo.signalk.util.SignalKConstants.env_wind_speedTrue;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_anchor_maxRadius;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_anchor_position_altitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_anchor_position_latitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_anchor_position_longitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_attitude_pitch;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_attitude_roll;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_courseOverGroundMagnetic;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_courseOverGroundTrue;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_headingMagnetic;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_headingTrue;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_magneticVariation;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_position_altitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_position_latitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_position_longitude;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_rateOfTurn;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_speedOverGround;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_speedThroughWater;
import static nz.co.fortytwo.signalk.util.SignalKConstants.nav_state;
import static nz.co.fortytwo.signalk.util.SignalKConstants.source;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_backlash;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_deadZone;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_gain;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_headingSource;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_maxDriveCurrent;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_maxDriveRate;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_mode;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_portLock;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_starboardLock;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_state;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_targetHeadingMagnetic;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_autopilot_targetHeadingNorth;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_rudderAngle;
import static nz.co.fortytwo.signalk.util.SignalKConstants.steering_rudderAngleTarget;
import static nz.co.fortytwo.signalk.util.SignalKConstants.timestamp;
import static nz.co.fortytwo.signalk.util.SignalKConstants.value;
import static nz.co.fortytwo.signalk.util.SignalKConstants.vessels;
import static nz.co.fortytwo.signalk.util.SignalKConstants.vessels_dot_self_dot;
import nz.co.fortytwo.signalk.model.SignalKModel;
import nz.co.fortytwo.signalk.model.impl.SignalKModelFactory;

public class TestHelper {

	public static SignalKModel getOtherModel(){
		SignalKModel other = SignalKModelFactory.getCleanInstance();
		other.put(vessels+dot+"other"+dot+env_airPressure+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_airPressure+dot+timestamp , "2015-03-16T03:31:22.110Z");
		 other.put(vessels+dot+"other"+dot+env_airPressure+dot+value , 1024);
		 other.put(vessels+dot+"other"+dot+env_airPressureChangeRateAlarm+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_airPressureChangeRateAlarm+dot+timestamp , "2015-03-16T03:31:22.324Z");
		 other.put(vessels+dot+"other"+dot+env_airPressureChangeRateAlarm+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+env_waterTemp+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_waterTemp+dot+timestamp , "2015-03-16T03:31:22.324Z");
		 other.put(vessels+dot+"other"+dot+env_waterTemp+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+env_wind_angleApparent+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_angleApparent+dot+timestamp , "2015-03-16T03:31:22.325Z");
		 other.put(vessels+dot+"other"+dot+env_wind_angleApparent+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+env_wind_directionChangeAlarm+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_directionChangeAlarm+dot+timestamp , "2015-03-16T03:31:22.326Z");
		 other.put(vessels+dot+"other"+dot+env_wind_directionChangeAlarm+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+env_wind_directionTrue+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_directionTrue+dot+timestamp , "2015-03-16T03:31:22.327Z");
		 other.put(vessels+dot+"other"+dot+env_wind_directionTrue+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+env_wind_speedAlarm+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_speedAlarm+dot+timestamp , "2015-03-16T03:31:22.327Z");
		 other.put(vessels+dot+"other"+dot+env_wind_speedAlarm+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+env_wind_speedApparent+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_speedApparent+dot+timestamp , "2015-03-16T03:31:22.328Z");
		 other.put(vessels+dot+"other"+dot+env_wind_speedApparent+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+env_wind_speedTrue+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+env_wind_speedTrue+dot+timestamp , "2015-03-16T03:31:22.329Z");
		 other.put(vessels+dot+"other"+dot+env_wind_speedTrue+dot+value , 7.68d);
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+timestamp , "2015-03-16T03:31:22.330Z");
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+timestamp , "2015-03-16T03:31:22.330Z");
		 other.put(vessels+dot+"other"+dot+nav_anchor_maxRadius+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+nav_anchor_position_altitude , 0d);
		 other.put(vessels+dot+"other"+dot+nav_anchor_position_latitude , -41.2936935424d);
		 other.put(vessels+dot+"other"+dot+nav_anchor_position_longitude , 173.2470855712d);
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundMagnetic+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundMagnetic+dot+timestamp , "2015-03-16T03:31:22.331Z");
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundMagnetic+dot+value , Math.toRadians(93d));
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundTrue+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundTrue+dot+timestamp , "2015-03-16T03:31:22.332Z");
		 other.put(vessels+dot+"other"+dot+nav_courseOverGroundTrue+dot+value , Math.toRadians(11.9600000381d));
		 other.put(vessels+dot+"other"+dot+nav_headingMagnetic+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_headingMagnetic+dot+timestamp , "2015-03-16T03:31:22.333Z");
		 other.put(vessels+dot+"other"+dot+nav_headingMagnetic+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_headingTrue+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_headingTrue+dot+timestamp , "2015-03-16T03:31:22.334Z");
		 other.put(vessels+dot+"other"+dot+nav_headingTrue+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_magneticVariation+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_magneticVariation+dot+timestamp , "2015-03-16T03:31:22.335Z");
		 other.put(vessels+dot+"other"+dot+nav_magneticVariation+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_attitude_pitch+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_attitude_pitch+dot+timestamp , "2015-03-16T03:31:22.335Z");
		 other.put(vessels+dot+"other"+dot+nav_attitude_pitch+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_position_altitude , 0d);
		 other.put(vessels+dot+"other"+dot+nav_position_latitude , -41.2936935424d);
		 other.put(vessels+dot+"other"+dot+nav_position_longitude , 173.2470855712d);
		 other.put(vessels+dot+"other"+dot+nav_rateOfTurn+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_rateOfTurn+dot+timestamp , "2015-03-16T03:31:22.336Z");
		 other.put(vessels+dot+"other"+dot+nav_rateOfTurn+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_attitude_roll+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_attitude_roll+dot+timestamp , "2015-03-16T03:31:22.341Z");
		 other.put(vessels+dot+"other"+dot+nav_attitude_roll+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+nav_speedOverGround+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_speedOverGround+dot+timestamp , "2015-03-16T03:31:22.342Z");
		 other.put(vessels+dot+"other"+dot+nav_speedOverGround+dot+value , 0.039999998d);
		 other.put(vessels+dot+"other"+dot+nav_speedThroughWater+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_speedThroughWater+dot+timestamp , "2015-03-16T03:31:22.343Z");
		 other.put(vessels+dot+"other"+dot+nav_speedThroughWater+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+nav_state+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+nav_state+dot+timestamp , "2015-03-16T03:31:22.343Z");
		 other.put(vessels+dot+"other"+dot+nav_state+dot+value , "Notdefined(example)");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_backlash+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_backlash+dot+timestamp , "2015-03-16T03:31:22.345Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_backlash+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_deadZone+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_deadZone+dot+timestamp , "2015-03-16T03:31:22.346Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_deadZone+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_gain+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_gain+dot+timestamp , "2015-03-16T03:31:22.347Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_gain+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_headingSource+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_headingSource+dot+timestamp , "2015-03-16T03:31:22.348Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_headingSource+dot+value , "compass");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveCurrent+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveCurrent+dot+timestamp , "2015-03-16T03:31:22.349Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveCurrent+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveRate+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveRate+dot+timestamp , "2015-03-16T03:31:22.356Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_maxDriveRate+dot+value , 0d);
		 other.put(vessels+dot+"other"+dot+steering_autopilot_mode+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_mode+dot+timestamp , "2015-03-16T03:31:22.359Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_mode+dot+value , "powersave");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_portLock+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_portLock+dot+timestamp , "2015-03-16T03:31:22.360Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_portLock+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_starboardLock+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_starboardLock+dot+timestamp , "2015-03-16T03:31:22.363Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_starboardLock+dot+value ,  Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_state+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_state+dot+timestamp , "2015-03-16T03:31:22.366Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_state+dot+value , "off");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingMagnetic+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingMagnetic+dot+timestamp , "2015-03-16T03:31:22.369Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingMagnetic+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingNorth+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingNorth+dot+timestamp , "2015-03-16T03:31:22.371Z");
		 other.put(vessels+dot+"other"+dot+steering_autopilot_targetHeadingNorth+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_rudderAngle+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_rudderAngle+dot+timestamp , "2015-03-16T03:31:22.374Z");
		 other.put(vessels+dot+"other"+dot+steering_rudderAngle+dot+value , Math.toRadians(0d));
		 other.put(vessels+dot+"other"+dot+steering_rudderAngleTarget+dot+source , "unknown");
		 other.put(vessels+dot+"other"+dot+steering_rudderAngleTarget+dot+timestamp , "2015-03-16T03:31:22.376Z");
		 other.put(vessels+dot+"other"+dot+steering_rudderAngleTarget+dot+value , Math.toRadians(0d));
		 return other;
	}

	public static SignalKModel getBasicModel() {
		SignalKModel basic = SignalKModelFactory.getCleanInstance();
		basic.put(vessels_dot_self_dot+env_airPressure+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_airPressure+dot+timestamp,"2015-03-16T03:31:22.110Z");
		basic.put(vessels_dot_self_dot+env_airPressure+dot+value,1024);
		basic.put(vessels_dot_self_dot+env_airPressureChangeRateAlarm+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_airPressureChangeRateAlarm+dot+timestamp,"2015-03-16T03:31:22.324Z");
		basic.put(vessels_dot_self_dot+env_airPressureChangeRateAlarm+dot+value,0d);
		basic.put(vessels_dot_self_dot+env_waterTemp+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_waterTemp+dot+timestamp,"2015-03-16T03:31:22.324Z");
		basic.put(vessels_dot_self_dot+env_waterTemp+dot+value,0d);
		basic.put(vessels_dot_self_dot+env_wind_angleApparent+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_angleApparent+dot+timestamp,"2015-03-16T03:31:22.325Z");
		basic.put(vessels_dot_self_dot+env_wind_angleApparent+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+env_wind_directionChangeAlarm+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_directionChangeAlarm+dot+timestamp,"2015-03-16T03:31:22.326Z");
		basic.put(vessels_dot_self_dot+env_wind_directionChangeAlarm+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+env_wind_directionTrue+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_directionTrue+dot+timestamp,"2015-03-16T03:31:22.327Z");
		basic.put(vessels_dot_self_dot+env_wind_directionTrue+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+env_wind_speedAlarm+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_speedAlarm+dot+timestamp,"2015-03-16T03:31:22.327Z");
		basic.put(vessels_dot_self_dot+env_wind_speedAlarm+dot+value,0d);
		basic.put(vessels_dot_self_dot+env_wind_speedApparent+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_speedApparent+dot+timestamp,"2015-03-16T03:31:22.328Z");
		basic.put(vessels_dot_self_dot+env_wind_speedApparent+dot+value,0d);
		basic.put(vessels_dot_self_dot+env_wind_speedTrue+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+env_wind_speedTrue+dot+timestamp,"2015-03-16T03:31:22.329Z");
		basic.put(vessels_dot_self_dot+env_wind_speedTrue+dot+value,7.68d);
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+timestamp,"2015-03-16T03:31:22.330Z");
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+value,0d);
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+timestamp,"2015-03-16T03:31:22.330Z");
		basic.put(vessels_dot_self_dot+nav_anchor_maxRadius+dot+value,0d);
		basic.put(vessels_dot_self_dot+nav_anchor_position_altitude,0d);
		basic.put(vessels_dot_self_dot+nav_anchor_position_latitude,-41.2936935424d);
		basic.put(vessels_dot_self_dot+nav_anchor_position_longitude,173.2470855712d);
		basic.put(vessels_dot_self_dot+nav_courseOverGroundMagnetic+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_courseOverGroundMagnetic+dot+timestamp,"2015-03-16T03:31:22.331Z");
		basic.put(vessels_dot_self_dot+nav_courseOverGroundMagnetic+dot+value,Math.toRadians(93d));
		basic.put(vessels_dot_self_dot+nav_courseOverGroundTrue+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_courseOverGroundTrue+dot+timestamp,"2015-03-16T03:31:22.332Z");
		basic.put(vessels_dot_self_dot+nav_courseOverGroundTrue+dot+value,Math.toRadians(11.9600000381d));
		basic.put(vessels_dot_self_dot+nav_headingMagnetic+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_headingMagnetic+dot+timestamp,"2015-03-16T03:31:22.333Z");
		basic.put(vessels_dot_self_dot+nav_headingMagnetic+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_headingTrue+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_headingTrue+dot+timestamp,"2015-03-16T03:31:22.334Z");
		basic.put(vessels_dot_self_dot+nav_headingTrue+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_magneticVariation+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_magneticVariation+dot+timestamp,"2015-03-16T03:31:22.335Z");
		basic.put(vessels_dot_self_dot+nav_magneticVariation+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_attitude_pitch+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_attitude_pitch+dot+timestamp,"2015-03-16T03:31:22.335Z");
		basic.put(vessels_dot_self_dot+nav_attitude_pitch+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_position_altitude,0d);
		basic.put(vessels_dot_self_dot+nav_position_latitude,-41.2936935424d);
		basic.put(vessels_dot_self_dot+nav_position_longitude,173.2470855712d);
		basic.put(vessels_dot_self_dot+nav_rateOfTurn+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_rateOfTurn+dot+timestamp,"2015-03-16T03:31:22.336Z");
		basic.put(vessels_dot_self_dot+nav_rateOfTurn+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_attitude_roll+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_attitude_roll+dot+timestamp,"2015-03-16T03:31:22.341Z");
		basic.put(vessels_dot_self_dot+nav_attitude_roll+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+nav_speedOverGround+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_speedOverGround+dot+timestamp,"2015-03-16T03:31:22.342Z");
		basic.put(vessels_dot_self_dot+nav_speedOverGround+dot+value,0.039999998d);
		basic.put(vessels_dot_self_dot+nav_speedThroughWater+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_speedThroughWater+dot+timestamp,"2015-03-16T03:31:22.343Z");
		basic.put(vessels_dot_self_dot+nav_speedThroughWater+dot+value,0d);
		basic.put(vessels_dot_self_dot+nav_state+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+nav_state+dot+timestamp,"2015-03-16T03:31:22.343Z");
		basic.put(vessels_dot_self_dot+nav_state+dot+value,"Notdefined(example)");
		basic.put(vessels_dot_self_dot+steering_autopilot_backlash+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_backlash+dot+timestamp,"2015-03-16T03:31:22.345Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_backlash+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_autopilot_deadZone+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_deadZone+dot+timestamp,"2015-03-16T03:31:22.346Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_deadZone+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_autopilot_gain+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_gain+dot+timestamp,"2015-03-16T03:31:22.347Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_gain+dot+value,0d);
		basic.put(vessels_dot_self_dot+steering_autopilot_headingSource+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_headingSource+dot+timestamp,"2015-03-16T03:31:22.348Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_headingSource+dot+value,"compass");
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveCurrent+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveCurrent+dot+timestamp,"2015-03-16T03:31:22.349Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveCurrent+dot+value,0d);
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveRate+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveRate+dot+timestamp,"2015-03-16T03:31:22.356Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_maxDriveRate+dot+value,0d);
		basic.put(vessels_dot_self_dot+steering_autopilot_mode+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_mode+dot+timestamp,"2015-03-16T03:31:22.359Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_mode+dot+value,"powersave");
		basic.put(vessels_dot_self_dot+steering_autopilot_portLock+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_portLock+dot+timestamp,"2015-03-16T03:31:22.360Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_portLock+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_autopilot_starboardLock+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_starboardLock+dot+timestamp,"2015-03-16T03:31:22.363Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_starboardLock+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_autopilot_state+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_state+dot+timestamp,"2015-03-16T03:31:22.366Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_state+dot+value,"off");
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingMagnetic+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingMagnetic+dot+timestamp,"2015-03-16T03:31:22.369Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingMagnetic+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingNorth+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingNorth+dot+timestamp,"2015-03-16T03:31:22.371Z");
		basic.put(vessels_dot_self_dot+steering_autopilot_targetHeadingNorth+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_rudderAngle+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_rudderAngle+dot+timestamp,"2015-03-16T03:31:22.374Z");
		basic.put(vessels_dot_self_dot+steering_rudderAngle+dot+value, Math.toRadians(0d));
		basic.put(vessels_dot_self_dot+steering_rudderAngleTarget+dot+source,"unknown");
		basic.put(vessels_dot_self_dot+steering_rudderAngleTarget+dot+timestamp,"2015-03-16T03:31:22.376Z");
		basic.put(vessels_dot_self_dot+steering_rudderAngleTarget+dot+value, Math.toRadians(0d));
		return basic;
	}
	
}
